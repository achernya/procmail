.de Id
.ds Rv \\$3
.ds Dt \\$4
..
.Id $Id: formail.1,v 2.0 1991/06/10 17:37:18 berg Rel $
.de Sh
.br
.ne 9
.SH \\$1
..
.de Ss
.br
.ne 9
.SS \\$1
..
.de Tp
.br
.ne 9
.TP \\$1
..
.TH FORMAIL 1 \*(Dt BuGless
.SH NAME
formail \- mail (re)formatter
.SH SYNOPSIS
.B formail
[
.I "\fB\+\fPskip"
] [
.I "\fB\-\fPtotal"
] [
.B \-bfnrted
]
.if n .ti +0.5i
[
.B \-s
.I command
.I argument
\&.\|.\|.
]
.Sh "DESCRIPTION"
.LP
.B formail
is a filter that can be used to force mail into mailbox format, perform real
rigorous `From ' escaping, generate auto-replying headers or split up a
mailbox/digest file.  The mail/mailbox contents will be expected on stdin.
.LP
If formail is supposed to determine the sender of the mail, but is unable
to find any, it will substitute `foo@bar'.
.LP
If formail is started without any command line options, it will force any
mail coming from stdin into mailbox format and will escape
.B all
bogus `From ' lines.
.Sh "OPTIONS"
.Tp 5
.B \-b
Don't escape any bogus mailbox headers (i.e. lines starting with `From ').
.Tp
.B \-f
Force formail to simply pass along any non-mailbox format (i.e. don't
generate a `From ' line as the first line).
.Tp
.B \-r
Generate an auto-reply header.
.Tp
.B \-t
Trust the sender to have used a valid return address in his header.  This
option will be most usefull when generating auto-reply headers from news
articles.  If this option is not turned on, formail tries to digest the most
probable valid return address itself.
.Tp
.B \-s
The input will be split up into seperate mail messages, and piped into
a program one by one (a new program is started for every part).
.B \-s
has to be the last option specified, the first argument following it
is expected to be the name of a program, any other arguments will be passed
along to it.
.Tp
.B \-n
Tell formail not to wait for every program to finish before starting the next.
.Tp
.B \-e
Consider every line starting with `From ' to be the start of a new mail
message (this is normally not the case).
.Tp
.B \-d
Enables formail to split up digests into their original messages.
.Tp
.I "\fB\+\fPskip"
Skip the first
.I skip
messages while splitting.
.Tp
.I "\fB\-\fPtotal"
Output at most
.I total
messages while splitting.
.Sh "EXAMPLES"
.LP
To split up a digest one usually uses:
.RS
formail +1 -d -s procmail
.RE
.Sh "MISCELLANEOUS"
.LP
The regular expression that is used to find `real' postmarks is:
.RS
\\n\\nFrom +[^\\t\\n ]+ +[^\\n\\t]
.RE
.Sh "SEE ALSO"
.BR mail (1),
.BR binmail (1),
.BR sendmail (8),
.BR procmail (1),
.BR sh (1)
.Sh "DIAGNOSTICS"
.Tp 23
Couldn't write to stdout
The program that formail was trying to pipe into didn't accept all the data
formail sent to it.
.Tp
File table full
Too many open files on this machine.
.Tp
Can't fork
Too many processes on this machine.
.Tp
Failed to execute "x"
Program not in path, or not executable.
.Sh "BUGS"
.LP
formail does not do full RFC 822 parsing while generating a `From ' or
a `To: ' line, hence it can be fooled by some real tricky escaped/quoted
strings with `<', `>' or `(' characters in them.
.Sh "AUTHOR"
.LP
Stephen R. van den Berg at RWTH-Aachen, Germany
.RS
berg@messua.informatik.rwth-aachen.de
.br
berg@physik.tu-muenchen.de
.RE
